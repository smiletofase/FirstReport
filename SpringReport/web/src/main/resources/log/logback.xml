<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <springProperty scope="context" name="LOG_HOME" source="logging.path"/>
    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root"/>
    <springProperty scope="context" name="FILE_NAME" source="spring.application.name"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{sessionId}] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="DEBUGFILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${FILE_NAME}.%d{yyyy-MM-dd}.%i.debug.log.zip</FileNamePattern>
            <!-- 保留360天的日志，超过360天的日志将会被删除 -->
            <MaxHistory>360</MaxHistory>
            <!-- 日志总保存量为10GB，超过10G以后会按照时间顺序进行删除 ，也可以不进行配置-->
            <!-- <totalSizeCap>10GB</totalSizeCap> -->
            <timeBasedFileNamingAndTriggeringPolicy
               class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大128MB时会被压缩和切割 -->
                <maxFileSize>128MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{sessionId}] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="ERRORFILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${FILE_NAME}.%d{yyyy-MM-dd}.%i.error.log.zip</FileNamePattern>
            <!-- 保留360天的日志，超过360天的日志将会被删除 -->
            <MaxHistory>360</MaxHistory>
            <!-- 日志总保存量为10GB，超过10G以后会按照时间顺序进行删除 ，也可以不进行配置-->
            <!-- <totalSizeCap>10GB</totalSizeCap> -->
            <timeBasedFileNamingAndTriggeringPolicy
               class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大128MB时会被压缩和切割 -->
                <maxFileSize>128MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{sessionId}] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
    <logger name="io.lettuce.core.protocol" level="OFF"></logger>
    <root level="${LOG_LEVEL}">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="DEBUGFILE" />
        <appender-ref ref="ERRORFILE" />
    </root>
</configuration>
